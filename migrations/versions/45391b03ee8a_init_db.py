""""init db"

Revision ID: 45391b03ee8a
Revises:
    Create Date: 2018-05-04 17:13:52.563322

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils


# revision identifiers, used by Alembic.
revision = '45391b03ee8a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('duplicate',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('desc', sa.Text(), nullable=True),
    sa.Column('valid', sa.Boolean(), nullable=True),
    sa.Column('duptype', sa.String(length=10), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('group',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('options', sa.Text(), nullable=True),
    sa.Column('deployed', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('req',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('err_str', sa.Text(), nullable=True),
    sa.Column('request_type', sa.String(length=100), nullable=True),
    sa.Column('params', sa.Text(), nullable=True),
    sa.Column('drequest_result', sa.Text(), nullable=True),
    sa.Column('reply_url', sa.Text(), nullable=True),
    sa.Column('replied', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subnet',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('netmask', sa.Integer(), nullable=True),
    sa.Column('options', sa.Text(), nullable=True),
    sa.Column('deployed', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('calculatedrange',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('min', sqlalchemy_utils.types.ip_address.IPAddressType(length=50), nullable=True),
    sa.Column('max', sqlalchemy_utils.types.ip_address.IPAddressType(length=50), nullable=True),
    sa.Column('subnet_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['subnet_id'], ['subnet.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dtask',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('celery_task_id', sa.String(length=50), nullable=True),
    sa.Column('status', sa.String(length=10), nullable=True),
    sa.Column('desc', sa.Text(), nullable=True),
    sa.Column('err_str', sa.Text(), nullable=True),
    sa.Column('dreq_id', sa.Integer(), nullable=True),
    sa.Column('result', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['dreq_id'], ['req.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('host',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('mac', sa.String(length=100), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('options', sa.Text(), nullable=True),
    sa.Column('deployed', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('mac'),
    sa.UniqueConstraint('name')
    )
    op.create_table('pool',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('subnet_id', sa.Integer(), nullable=True),
    sa.Column('options', sa.Text(), nullable=True),
    sa.Column('deployed', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['subnet_id'], ['subnet.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dhcprange',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('min', sqlalchemy_utils.types.ip_address.IPAddressType(length=50), nullable=True),
    sa.Column('max', sqlalchemy_utils.types.ip_address.IPAddressType(length=50), nullable=True),
    sa.Column('pool_id', sa.Integer(), nullable=True),
    sa.Column('deployed', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['pool_id'], ['pool.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('IP',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('address', sqlalchemy_utils.types.ip_address.IPAddressType(length=50), nullable=True),
    sa.Column('calcrange_id', sa.Integer(), nullable=True),
    sa.Column('dhcprange_id', sa.Integer(), nullable=True),
    sa.Column('host_id', sa.Integer(), nullable=True),
    sa.Column('deployed', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['calcrange_id'], ['calculatedrange.id'], ),
    sa.ForeignKeyConstraint(['dhcprange_id'], ['dhcprange.id'], ),
    sa.ForeignKeyConstraint(['host_id'], ['host.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('address')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('IP')
    op.drop_table('dhcprange')
    op.drop_table('pool')
    op.drop_table('host')
    op.drop_table('dtask')
    op.drop_table('calculatedrange')
    op.drop_table('subnet')
    op.drop_table('req')
    op.drop_table('group')
    op.drop_table('duplicate')
    # ### end Alembic commands ###


